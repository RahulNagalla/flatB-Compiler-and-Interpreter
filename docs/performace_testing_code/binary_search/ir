; ModuleID = 'flatB'

@N = common global i32 0
@Q = common global i32 0
@p = common global i32 0
@P = common global i32 0
@MOD = common global i32 0
@q = common global i32 0
@i = common global i32 0
@j = common global i32 0
@k = common global i32 0
@l = common global i32 0
@r = common global i32 0
@m = common global i32 0
@arr = global [5000005 x i32] zeroinitializer
@queries = global [5000005 x i32] zeroinitializer
@answers = global [5000005 x i32] zeroinitializer

declare i32 @printf(i8*, ...)

define void @main() {
entry:
  store i32 100003, i32* @MOD
  store i32 5000000, i32* @Q
  store i32 5000000, i32* @N
  store i32 37, i32* @P
  store i32 1, i32* @p
  store i32 0, i32* @i
  %0 = load i32, i32* @i
  br label %for_condition

for_condition:                                    ; preds = %ifnext, %entry
  %1 = phi i32 [ %0, %entry ], [ %17, %ifnext ]
  %2 = load i32, i32* @N
  %3 = icmp slt i32 %1, %2
  br i1 %3, label %for_body, label %for_after

for_body:                                         ; preds = %for_condition
  %4 = load i32, i32* @p
  %5 = load i32, i32* @P
  %multmp = mul i32 %4, %5
  %6 = load i32, i32* @MOD
  %modtmp = srem i32 %multmp, %6
  store i32 %modtmp, i32* @p
  %7 = load i32, i32* @i
  %netmp = icmp ne i32 %7, 0
  br i1 %netmp, label %if, label %else

for_after:                                        ; preds = %for_condition
  store i32 1, i32* @p
  store i32 0, i32* @i
  %8 = load i32, i32* @i
  br label %for_condition6

if:                                               ; preds = %for_body
  %9 = load i32, i32* @i
  %subtmp = sub i32 %9, 1
  %arr_IDX = getelementptr [5000005 x i32], [5000005 x i32]* @arr, i32 0, i32 %subtmp
  %10 = load i32, i32* %arr_IDX
  %11 = load i32, i32* @p
  %modtmp1 = srem i32 %11, 100
  %addtmp = add i32 %10, %modtmp1
  %12 = load i32, i32* @MOD
  %modtmp2 = srem i32 %addtmp, %12
  %13 = load i32, i32* @i
  %arr_IDX3 = getelementptr [5000005 x i32], [5000005 x i32]* @arr, i32 0, i32 %13
  store i32 %modtmp2, i32* %arr_IDX3
  br label %ifnext

else:                                             ; preds = %for_body
  %14 = load i32, i32* @p
  %modtmp4 = srem i32 %14, 10
  %15 = load i32, i32* @i
  %arr_IDX5 = getelementptr [5000005 x i32], [5000005 x i32]* @arr, i32 0, i32 %15
  store i32 %modtmp4, i32* %arr_IDX5
  br label %ifnext

ifnext:                                           ; preds = %else, %if
  %16 = load i32, i32* @i
  %17 = add i32 %16, 1
  store i32 %17, i32* @i
  br label %for_condition

for_condition6:                                   ; preds = %for_body7, %for_after
  %18 = phi i32 [ %8, %for_after ], [ %27, %for_body7 ]
  %19 = load i32, i32* @Q
  %20 = icmp slt i32 %18, %19
  br i1 %20, label %for_body7, label %for_after8

for_body7:                                        ; preds = %for_condition6
  %21 = load i32, i32* @p
  %22 = load i32, i32* @P
  %multmp9 = mul i32 %21, %22
  %23 = load i32, i32* @MOD
  %modtmp10 = srem i32 %multmp9, %23
  store i32 %modtmp10, i32* @p
  %24 = load i32, i32* @p
  %25 = load i32, i32* @i
  %queries_IDX = getelementptr [5000005 x i32], [5000005 x i32]* @queries, i32 0, i32 %25
  store i32 %24, i32* %queries_IDX
  %26 = load i32, i32* @i
  %27 = add i32 %26, 1
  store i32 %27, i32* @i
  br label %for_condition6

for_after8:                                       ; preds = %for_condition6
  store i32 0, i32* @i
  %28 = load i32, i32* @i
  br label %for_condition11

for_condition11:                                  ; preds = %afterloop, %for_after8
  %29 = phi i32 [ %28, %for_after8 ], [ %44, %afterloop ]
  %30 = load i32, i32* @Q
  %31 = icmp slt i32 %29, %30
  br i1 %31, label %for_body12, label %for_after13

for_body12:                                       ; preds = %for_condition11
  %32 = load i32, i32* @i
  %queries_IDX14 = getelementptr [5000005 x i32], [5000005 x i32]* @queries, i32 0, i32 %32
  %33 = load i32, i32* %queries_IDX14
  store i32 %33, i32* @q
  store i32 0, i32* @l
  %34 = load i32, i32* @N
  %subtmp15 = sub i32 %34, 1
  store i32 %subtmp15, i32* @r
  %35 = load i32, i32* @i
  %answers_IDX = getelementptr [5000005 x i32], [5000005 x i32]* @answers, i32 0, i32 %35
  store i32 -1, i32* %answers_IDX
  br label %while_condition

for_after13:                                      ; preds = %for_condition11
  ret void

while_condition:                                  ; preds = %ifnext19, %for_body12
  %36 = load i32, i32* @l
  %37 = load i32, i32* @r
  %lttmp = icmp slt i32 %36, %37
  br i1 %lttmp, label %loop, label %afterloop

loop:                                             ; preds = %while_condition
  %38 = load i32, i32* @l
  %39 = load i32, i32* @r
  %addtmp16 = add i32 %38, %39
  %divtmp = sdiv i32 %addtmp16, 2
  store i32 %divtmp, i32* @m
  %40 = load i32, i32* @m
  %arr_IDX20 = getelementptr [5000005 x i32], [5000005 x i32]* @arr, i32 0, i32 %40
  %41 = load i32, i32* %arr_IDX20
  %42 = load i32, i32* @q
  %eqtmp = icmp eq i32 %41, %42
  br i1 %eqtmp, label %if17, label %else18

afterloop:                                        ; preds = %while_condition
  %43 = load i32, i32* @i
  %44 = add i32 %43, 1
  store i32 %44, i32* @i
  br label %for_condition11

if17:                                             ; preds = %loop
  %45 = load i32, i32* @m
  %46 = load i32, i32* @i
  %answers_IDX21 = getelementptr [5000005 x i32], [5000005 x i32]* @answers, i32 0, i32 %46
  store i32 %45, i32* %answers_IDX21
  store i32 1, i32* @l
  store i32 0, i32* @r
  br label %ifnext19

else18:                                           ; preds = %loop
  %47 = load i32, i32* @m
  %arr_IDX25 = getelementptr [5000005 x i32], [5000005 x i32]* @arr, i32 0, i32 %47
  %48 = load i32, i32* %arr_IDX25
  %49 = load i32, i32* @q
  %gttmp = icmp sgt i32 %48, %49
  br i1 %gttmp, label %if22, label %else23

ifnext19:                                         ; preds = %ifnext24, %if17
  br label %while_condition

if22:                                             ; preds = %else18
  %50 = load i32, i32* @m
  %subtmp26 = sub i32 %50, 1
  store i32 %subtmp26, i32* @r
  br label %ifnext24

else23:                                           ; preds = %else18
  %51 = load i32, i32* @m
  %addtmp27 = add i32 %51, 1
  store i32 %addtmp27, i32* @l
  br label %ifnext24

ifnext24:                                         ; preds = %else23, %if22
  br label %ifnext19
}
